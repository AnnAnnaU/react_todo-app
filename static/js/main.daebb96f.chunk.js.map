{"version":3,"sources":["components/Form/Form.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/Filters/Filters.jsx","components/Footer/Footer.jsx","App.jsx","index.jsx"],"names":["Form","todoTitle","setTodoTitle","handleSubmit","className","onSubmit","type","placeholder","value","onChange","target","TodoItem","todo","setStatus","destroyTodo","setTitleEditing","useState","newTitle","setNewTitle","editTitle","setEditTitle","key","id","completed","editing","checked","onDoubleClick","event","title","preventDefault","handleDblClick","onClick","onKeyUp","onBlur","todoId","TodoList","todos","activeTodos","setAllTodosCompleted","saveTodos","setSaveTodos","useEffect","length","htmlFor","map","Filters","exact","to","activeClassName","Footer","completedTodos","clearCompletedTodos","App","setTodos","filter","pathname","useLocation","e","trim","Date","prevTodos","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daebb96f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ todoTitle, setTodoTitle, handleSubmit }) => (\n  <header className=\"header\">\n    <h1>todo app</h1>\n\n    <form\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todoTitle}\n        onChange={({ target }) => setTodoTitle(target.value)}\n      />\n    </form>\n  </header>\n);\n\nForm.propTypes = {\n  todoTitle: PropTypes.string.isRequired,\n  setTodoTitle: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, setStatus, destroyTodo, setTitleEditing }) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [editTitle, setEditTitle] = useState(false);\n\n  const handleDblClick = (event, title) => {\n    event.preventDefault();\n    setEditTitle(!editTitle);\n    setNewTitle(title);\n  };\n\n  const handleKeyUp = (event) => {\n    const { key } = event;\n\n    switch (key) {\n      case 'Enter':\n        setTitleEditing(todo.id, newTitle);\n        setEditTitle(false);\n        break;\n\n      case 'Escape':\n        setNewTitle(todo.title);\n        setTitleEditing(todo.id, todo.title);\n        setEditTitle(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleEdit = ({ target }) => {\n    if (target.value) {\n      setNewTitle(target.value);\n    }\n  };\n\n  const handleBlur = (todoId, title) => {\n    setTitleEditing(todoId, title);\n    setEditTitle(false);\n  };\n\n  return (\n    <li\n      key={todo.id}\n      className={className({\n        completed: todo.completed,\n        editing: editTitle,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => setStatus(todo.id)}\n        />\n        <label\n          onDoubleClick={event => handleDblClick(event, todo.title)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroyTodo(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        onChange={handleEdit}\n        onKeyUp={handleKeyUp}\n        onBlur={handleBlur}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  setStatus: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  setTitleEditing: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos,\n  setStatus,\n  destroyTodo,\n  activeTodos,\n  setAllTodosCompleted,\n  setTitleEditing }) => {\n  const [saveTodos, setSaveTodos] = useState(todos);\n\n  useEffect(() => {\n    setSaveTodos(todos);\n  }, [todos]);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={activeTodos.length}\n        onChange={setAllTodosCompleted}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {saveTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            setStatus={setStatus}\n            destroyTodo={destroyTodo}\n            setTitleEditing={setTitleEditing}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  setStatus: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  activeTodos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  setAllTodosCompleted: PropTypes.func.isRequired,\n  setTitleEditing: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Filters = () => (\n  <ul className=\"filters\">\n    <li>\n      <NavLink\n        exact\n        to=\"/\"\n        activeClassName=\"selected\"\n      >\n        All\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/active\"\n        activeClassName=\"selected\"\n      >\n        Active\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/completed\"\n        activeClassName=\"selected\"\n      >\n        Completed\n      </NavLink>\n    </li>\n  </ul>\n\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Filters } from '../Filters/Filters';\n\nexport const Footer = ({ activeTodos,\n  completedTodos,\n  clearCompletedTodos }) => (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {activeTodos.length}\n        {' '}\n        items left\n      </span>\n\n      <Filters />\n\n      {completedTodos.length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompletedTodos}\n      >\n        Clear completed\n      </button>\n      )\n    }\n    </footer>\n);\n\nFooter.propTypes = {\n  activeTodos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  completedTodos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Form } from './components/Form';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todoTitle.trim().length > 0) {\n      const todo = {\n        title: todoTitle,\n        id: +new Date(),\n        completed: null,\n      };\n\n      setTodos([todo, ...todos]);\n    }\n\n    setTodoTitle('');\n  };\n\n  const setStatus = (todoId) => {\n    setTodos(prevTodos => prevTodos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const destroyTodo = (todoId) => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const activeTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const location = useLocation();\n  const { pathname } = location;\n\n  const filterTodos = () => {\n    switch (pathname) {\n      case '/active':\n        return activeTodos;\n      case '/completed':\n        return completedTodos;\n      default:\n        return todos;\n    }\n  };\n\n  const clearCompletedTodos = () => {\n    setTodos(activeTodos);\n  };\n\n  const setAllTodosCompleted = () => {\n    setTodos(prevState => prevState.map(todo => (\n      { ...todo, completed: !todo.completed }\n    )));\n  };\n\n  const setTitleEditing = (todoId, title) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          title,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <Form\n        handleSubmit={handleSubmit}\n        todoTitle={todoTitle}\n        setTodoTitle={setTodoTitle}\n      />\n\n      <TodoList\n        todos={filterTodos}\n        setStatus={setStatus}\n        destroyTodo={destroyTodo}\n        activeTodos={activeTodos}\n        setAllTodosCompleted={setAllTodosCompleted}\n        setTitleEditing={setTitleEditing}\n      />\n\n      {todos.length > 0\n        && (\n        <Footer\n          todos={todos}\n          activeTodos={activeTodos}\n          completedTodos={completedTodos}\n          clearCompletedTodos={clearCompletedTodos}\n        />\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}