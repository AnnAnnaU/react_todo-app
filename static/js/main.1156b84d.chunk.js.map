{"version":3,"sources":["components/Form/Form.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/Filters/Filters.jsx","components/Footer/Footer.jsx","App.jsx","index.jsx"],"names":["Form","todoTitle","setTodoTitle","handleSubmit","className","onSubmit","type","placeholder","value","onChange","target","TodoItem","todo","setStatus","destroyTodo","setTitleEditing","useState","newTitle","setNewTitle","editTitle","setEditTitle","key","id","completed","editing","checked","onDoubleClick","event","title","preventDefault","handleDblClick","onClick","autoFocus","onKeyUp","onBlur","todoId","TodoList","todos","changeAllTodosStatus","status","saveTodos","setSaveTodos","useEffect","length","htmlFor","map","Filters","exact","to","activeClassName","Footer","activeTodos","completedTodos","clearCompletedTodos","App","useLocalStorage","setTodos","filter","pathname","useLocation","every","e","trim","Date","prevTodos","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1156b84d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ todoTitle, setTodoTitle, handleSubmit }) => (\n  <header className=\"header\">\n    <h1>todo app</h1>\n\n    <form\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todoTitle}\n        onChange={({ target }) => setTodoTitle(target.value)}\n      />\n    </form>\n  </header>\n);\n\nForm.propTypes = {\n  todoTitle: PropTypes.string.isRequired,\n  setTodoTitle: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, setStatus, destroyTodo, setTitleEditing }) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [editTitle, setEditTitle] = useState(false);\n\n  const handleDblClick = (event, title) => {\n    event.preventDefault();\n    setEditTitle(!editTitle);\n    setNewTitle(title);\n  };\n\n  const handleKeyUp = (event) => {\n    const { key } = event;\n\n    switch (key) {\n      case 'Enter':\n        setTitleEditing(todo.id, newTitle);\n        setEditTitle(false);\n        break;\n\n      case 'Escape':\n        setNewTitle(todo.title);\n        setTitleEditing(todo.id, todo.title);\n        setEditTitle(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleEdit = ({ target }) => {\n    if (target.value) {\n      setNewTitle(target.value);\n    }\n  };\n\n  const handleBlur = (todoId, title) => {\n    setTitleEditing(todoId, title);\n    setEditTitle(false);\n  };\n\n  return (\n    <li\n      key={todo.id}\n      className={className({\n        completed: todo.completed,\n        editing: editTitle,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => setStatus(todo.id)}\n        />\n        <label\n          onDoubleClick={event => handleDblClick(event, todo.title)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroyTodo(todo.id)}\n        />\n      </div>\n      {editTitle &&\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"edit\"\n          value={newTitle}\n          onChange={handleEdit}\n          onKeyUp={handleKeyUp}\n          onBlur={handleBlur}\n        />\n      }\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  setStatus: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  setTitleEditing: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos,\n  setStatus,\n  destroyTodo,\n  setTitleEditing,\n  changeAllTodosStatus,\n  status }) => {\n\n  const [saveTodos, setSaveTodos] = useState([])\n\n  useEffect(() => {\n    setSaveTodos(todos)\n  }, [todos])\n\n  return (\n    <section className=\"main\">\n\n      {saveTodos.length > 0 &&\n        <>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={status}\n            onChange={() => changeAllTodosStatus(!status)}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </>\n      }\n\n      <ul className=\"todo-list\">\n        {saveTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            setStatus={setStatus}\n            destroyTodo={destroyTodo}\n            setTitleEditing={setTitleEditing}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  setStatus: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  setTitleEditing: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Filters = () => (\n  <ul className=\"filters\">\n    <li>\n      <NavLink\n        exact\n        to=\"/\"\n        activeClassName=\"selected\"\n      >\n        All\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/active\"\n        activeClassName=\"selected\"\n      >\n        Active\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/completed\"\n        activeClassName=\"selected\"\n      >\n        Completed\n      </NavLink>\n    </li>\n  </ul>\n\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Filters } from '../Filters/Filters';\n\nexport const Footer = ({ activeTodos,\n  completedTodos,\n  clearCompletedTodos }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {activeTodos.length}\n      {' '}\n        items left\n      </span>\n\n    <Filters />\n\n    {completedTodos.length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompletedTodos}\n      >\n        Clear completed\n      </button>\n    )\n    }\n  </footer>\n);\n\nFooter.propTypes = {\n  activeTodos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  completedTodos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport useLocalStorage from \"use-local-storage\";\n\nimport { Form } from './components/Form';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\n\nfunction App() {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todoTitle.trim().length > 0) {\n      const todo = {\n        title: todoTitle,\n        id: +new Date(),\n        completed: false,\n      };\n\n      setTodos([todo, ...todos]);\n    }\n\n    setTodoTitle('');\n  };\n\n  const setStatus = (todoId) => {\n    setTodos(prevTodos => prevTodos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const destroyTodo = (todoId) => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const activeTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const location = useLocation();\n  const { pathname } = location;\n\n  const filterTodos = () => {\n    switch (pathname) {\n      case '/active':\n        return activeTodos;\n      case '/completed':\n        return completedTodos;\n      default:\n        return todos;\n    }\n  };\n\n  const clearCompletedTodos = () => {\n    setTodos(activeTodos);\n  };\n\n  const setTitleEditing = (todoId, title) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          title,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n\n  const status = todos.every(todo => todo.completed === true);\n\n  const changeAllTodosStatus = (status) => {\n    setTodos(prevState => prevState.map(todo => (\n      { ...todo, completed: status }\n    )))\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <Form\n        handleSubmit={handleSubmit}\n        todoTitle={todoTitle}\n        setTodoTitle={setTodoTitle}\n      />\n\n      <TodoList\n        todos={filterTodos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n        destroyTodo={destroyTodo}\n        setTitleEditing={setTitleEditing}\n        status={status}\n        changeAllTodosStatus={changeAllTodosStatus}\n      />\n\n      {todos.length > 0\n        && (\n          <Footer\n            todos={todos}\n            activeTodos={activeTodos}\n            completedTodos={completedTodos}\n            clearCompletedTodos={clearCompletedTodos}\n          />\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}